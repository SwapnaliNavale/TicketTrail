spring.application.name=ApiGateway

#register this service as Eureka client with Eureka server
eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka/

#
# routes info for blogs service
spring.cloud.gateway.routes[0].id=Bus-Service
spring.cloud.gateway.routes[0].uri=lb://Bus-Service
spring.cloud.gateway.routes[0].predicates[0]=Path=/buses/**, /routes/**, /schedules/**

#spring.cloud.gateway.routes[1].id=Category-Service
#spring.cloud.gateway.routes[1].uri=lb://Blogs-Category-Service
#spring.cloud.gateway.routes[1].predicates[0]=Path=/categories/**

# routes info for user service
spring.cloud.gateway.routes[1].id=User-Service
spring.cloud.gateway.routes[1].uri=lb://User-Service
spring.cloud.gateway.routes[1].predicates[0]=Path=/users/**



logging.level.org.springframework.cloud.gateway=trace


spring.cloud.gateway.discovery.locator.enabled=true
spring.cloud.gateway.discovery.locator.lower-case-service-id=true

# CORS Configuration for Spring Cloud Gateway
spring.cloud.gateway.globalcors.corsConfigurations.[/**].allowedOrigins=http://localhost:5173
spring.cloud.gateway.globalcors.corsConfigurations.[/**].allowedMethods=GET, POST, PUT, DELETE, OPTIONS
spring.cloud.gateway.globalcors.corsConfigurations.[/**].allowedHeaders=Content-Type, Authorization
spring.cloud.gateway.globalcors.corsConfigurations.[/**].allowCredentials=true

# ==== Security: Enable JWT Authentication ====
#spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:8080
#spring.security.oauth2.resourceserver.jwt.jwk-set-uri=http://localhost:8080/oauth2/jwks
